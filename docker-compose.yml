# Önce mysql master servisini başlat
# - monitor_user ve monitor_password ile monitor kullanıcısı oluşturuyoruz.
# - proxysql

# ve ardından mysql slave servislerini oluşturuyoruz.
# Sonra proxysql ve phpmyadmin servislerini oluşturuyoruz.

services:
  setup:
    image: mysql:5.7
    working_dir: /
    entrypoint: /run.sh
    volumes:
      - ./run.sh:/run.sh
    depends_on:
      master1:
        condition: service_healthy
      master2:
        condition: service_healthy
      master3:
        condition: service_healthy
    networks:
      - mysql_network

  master1:
    image: mysql:5.7
    container_name: master1
    restart: always
    command: --defaults-file=/etc/mysql/my.cnf --server-id=1
    volumes:
      - ./mysql.cnf:/etc/mysql/my.cnf
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - master1_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "33061:3306"
    networks:
      - mysql_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-proot_password"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      master2:
        condition: service_healthy
      master3:
        condition: service_healthy
  
  master2:
    image: mysql:5.7
    container_name: master2
    restart: always
    command: --defaults-file=/etc/mysql/my.cnf --server-id=2
    volumes:
      - ./mysql.cnf:/etc/mysql/my.cnf
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - master2_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "33062:3306"
    networks:
      - mysql_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-proot_password"]
      interval: 10s
      timeout: 5s
      retries: 5

  master3:
    image: mysql:5.7
    container_name: master3
    restart: always
    command: --defaults-file=/etc/mysql/my.cnf --server-id=3
    volumes:
      - ./mysql.cnf:/etc/mysql/my.cnf
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - master3_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password

    ports:
      - "33063:3306"
    networks:
      - mysql_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-proot_password"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  mysql_network:
    driver: bridge

volumes:
   master1_data:
   master2_data:
   master3_data: